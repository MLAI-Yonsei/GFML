
Epoch 1/1000
aver metric loss-2.986e-02, aver reg loss8.493e-05
Total time 15.816903114318848
Epoch 2/1000
aver metric loss-5.309e-02, aver reg loss2.797e-04
Total time 13.812105894088745
Epoch 3/1000
aver metric loss-6.494e-02, aver reg loss4.225e-04
Total time 15.369796514511108
Epoch 4/1000
aver metric loss-6.800e-02, aver reg loss5.608e-04
Total time 13.870901584625244
Epoch 5/1000
aver metric loss-7.265e-02, aver reg loss7.231e-04
Total time 11.951761722564697
Epoch 6/1000
aver metric loss-9.291e-02, aver reg loss7.748e-04
Total time 11.266011476516724
Epoch 7/1000
aver metric loss-9.739e-02, aver reg loss8.333e-04
Total time 12.253629684448242
Epoch 8/1000
aver metric loss-9.883e-02, aver reg loss8.958e-04
Total time 13.177035570144653
Epoch 9/1000
aver metric loss-9.889e-02, aver reg loss9.790e-04
Total time 13.462749242782593
Epoch 10/1000
Traceback (most recent call last):
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/multiprocessing/resource_sharer.py", line 149, in _serve
    send(conn, destination_pid)
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/multiprocessing/resource_sharer.py", line 50, in send
    reduction.send_handle(conn, new_fd, pid)
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/multiprocessing/reduction.py", line 179, in send_handle
    with socket.fromfd(conn.fileno(), socket.AF_UNIX, socket.SOCK_STREAM) as s:
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/socket.py", line 463, in fromfd
    nfd = dup(fd)
OSError: [Errno 24] Too many open files
Process ForkPoolWorker-7:
Traceback (most recent call last):
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/multiprocessing/pool.py", line 110, in worker
    task = get()
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/multiprocessing/queues.py", line 352, in get
    res = self._reader.recv_bytes()
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/multiprocessing/connection.py", line 407, in _recv_bytes
    buf = self._recv(4)
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
KeyboardInterrupt
Traceback (most recent call last):
  File "main.py", line 91, in <module>
    result = Procedure.Test(args, dataset, model, epoch, device, w, args.multicore)
  File "/data1/deepdog/project/GFML/MCL/code/Procedure.py", line 156, in Test
    pre_results = pool.map(test_one_batch, X)
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/multiprocessing/pool.py", line 268, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/multiprocessing/pool.py", line 651, in get
    self.wait(timeout)
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/multiprocessing/pool.py", line 648, in wait
    self._event.wait(timeout)
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/threading.py", line 552, in wait
    signaled = self._cond.wait(timeout)
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/threading.py", line 296, in wait
    waiter.acquire()
KeyboardInterrupt