
Epoch 1/1000
aver metric loss-2.401e-03, aver reg loss4.936e-05
Total time 15.212238550186157
Epoch 2/1000
aver metric loss-5.642e-03, aver reg loss2.125e-04
Total time 12.797316074371338
Epoch 3/1000
aver metric loss-7.584e-03, aver reg loss3.513e-04
Total time 12.722205638885498
Epoch 4/1000
aver metric loss-8.895e-03, aver reg loss4.790e-04
Total time 14.523717164993286
Epoch 5/1000
aver metric loss-9.202e-03, aver reg loss6.453e-04
Total time 14.040951013565063
Epoch 6/1000
aver metric loss-1.682e-02, aver reg loss5.920e-04
Total time 13.999862432479858
Epoch 7/1000
aver metric loss-1.940e-02, aver reg loss6.396e-04
Total time 13.76941704750061
Epoch 8/1000
aver metric loss-2.064e-02, aver reg loss7.028e-04
Total time 13.61252760887146
Epoch 9/1000
aver metric loss-2.094e-02, aver reg loss7.735e-04
Total time 15.064870834350586
Epoch 10/1000
{'precision': array([0.03678968, 0.03110713, 0.02511354]), 'recall': array([0.03028375, 0.0500278 , 0.07873249]), 'ndcg': array([0.04227873, 0.04795141, 0.0582095 ])}
Best so far: [0.03028375 0.0500278  0.07873249 0.04227873 0.04795141 0.0582095 ]
aver metric loss-2.249e-02, aver reg loss8.379e-04
Total time 28.68568468093872
Epoch 11/1000
aver metric loss-3.342e-02, aver reg loss8.660e-04
Total time 12.712271451950073
Epoch 12/1000
aver metric loss-3.611e-02, aver reg loss9.226e-04
Total time 14.08758020401001
Epoch 13/1000
aver metric loss-3.671e-02, aver reg loss9.788e-04
Total time 14.202302694320679
Epoch 14/1000
aver metric loss-3.700e-02, aver reg loss1.021e-03
Total time 13.288901329040527
Epoch 15/1000
aver metric loss-3.951e-02, aver reg loss1.059e-03
Total time 14.2029550075531
Epoch 16/1000
aver metric loss-4.882e-02, aver reg loss1.105e-03
Total time 13.596145868301392
Epoch 17/1000
Process Process-3:
Process Process-4:
Process Process-5:
Process Process-2:
Traceback (most recent call last):
Traceback (most recent call last):
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
Traceback (most recent call last):
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/data1/deepdog/project/GFML/MCL/code/utils.py", line 97, in UniformSample_original
    while neg in allPos[user]:
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/data1/deepdog/project/GFML/MCL/code/utils.py", line 96, in UniformSample_original
    for j, neg in enumerate(negatives):
KeyboardInterrupt
KeyboardInterrupt
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
Traceback (most recent call last):
  File "/data1/deepdog/project/GFML/MCL/code/utils.py", line 97, in UniformSample_original
    while neg in allPos[user]:
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
KeyboardInterrupt
  File "/data1/deepdog/anaconda3/envs/mcl/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/data1/deepdog/project/GFML/MCL/code/utils.py", line 97, in UniformSample_original
    while neg in allPos[user]:
KeyboardInterrupt
Traceback (most recent call last):
  File "main.py", line 109, in <module>
    output_information = Procedure.Metric_train_original(args, dataset, model, metric, epoch, sampler, w)
  File "/data1/deepdog/project/GFML/MCL/code/Procedure.py", line 32, in Metric_train_original
    metric_loss, reg_loss = metric.stageOne(S, num_items_per_user)
  File "/data1/deepdog/project/GFML/MCL/code/utils.py", line 34, in stageOne
    return metric_loss.cpu().item(), reg_loss.cpu().item()
KeyboardInterrupt